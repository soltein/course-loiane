package br.com.soltein.crudspring.dto.mapper;

import org.springframework.stereotype.Component;

import br.com.soltein.crudspring.dto.CourseDTO;
import br.com.soltein.crudspring.enums.Category;
import br.com.soltein.crudspring.model.Course;

@Component
public class CourseMapper {

	public CourseDTO toDTO(Course course) {
		if(course == null) {
			return null;
		}		
		
		return new CourseDTO(course.getId(), course.getName(), course.getCategory().getValue(), course.getLessons());
	}
	
	public Course toEntity(CourseDTO courseDTO) {
		
		if(courseDTO == null) {
			return null;
		}
		
		Course course = new Course();
		
		if(courseDTO._id() != null) {
			course.setId(courseDTO._id());
		}
		
		course.setName(courseDTO.name());
		course.setCategory(convertCategoryValue(courseDTO.category()));
		
		
		return course;
	}
	
	public Category convertCategoryValue(String value) {
		if(value == null) {
			return null;
		}
		
		return switch(value) {
			case "Front-End" -> Category.FRONT_END;
			case "Back-End" -> Category.BACKE_END;
			default -> throw new IllegalArgumentException("Categoria inv√°lida: " + value);
		};
	}
}
